var T=Object.defineProperty,d=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var v=Object.getOwnPropertySymbols;var u=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable;var D=(o,i,s)=>i in o?T(o,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[i]=s,g=(o,i)=>{for(var s in i||(i={}))u.call(i,s)&&D(o,s,i[s]);if(v)for(var s of v(i))m.call(i,s)&&D(o,s,i[s]);return o},r=(o,i)=>d(o,h(i));import{c8 as A,cb as y,cc as p,V as c}from"./index.a4b71a83.js";import{c as a}from"./Notifications.91e332ad.js";const n=A(),w=y("tiposDispositivos",{state:()=>({tiposDispositivos:[],tipoDispositivo:{}}),getters:{getTipoDispositivos:o=>o.tiposDispositivos,getTipoDispositivo:o=>o.tipoDispositivo,getTDtoSelect:o=>o.tiposDispositivos.map(i=>r(g({},i),{label:i.nombre_tipo,value:i.id_tipo}))},actions:{async getAllTipoDispositivos(){const o=await n.getToken;if(o=="")return this.tiposDispositivos;const{data:i}=await p.get("/tipos-dispositivos/",{headers:{Authorization:`Bearer ${o}`}});console.log("getAllTipoDispositivos ACTIONS: ",i),this.tiposDispositivos=i},async getTDById(o){const i=await n.getToken,{data:s}=await p.get(`/tipos-dispositivos/${o}`,{headers:{Authorization:`Bearer ${i}`}});console.log(s),this.tipoDispositivo=s},async createTipoDispositivo(o){const i=n.getToken;await p.post("/tipos-dispositivos/add/",o,{headers:{Authorization:`Bearer ${i}`}}).then(s=>{a(`Tipo Dispositivo ${s.data.id_rol} creado exitosamente!`,"positive"),console.log(s)}).catch(s=>{a(s.response.data.errors[0].message,"negative"),console.log("Error",s.response.data.message)}),this.getAllTipoDispositivos()},async updateTD(o,i){const s=await n.getToken;console.log("updateTD actions:",o,i),await p.put(`tipos-dispositivos/update/${o}`,i,{headers:{Authorization:`Bearer ${s}`}}).then(e=>{a(`Tipo Dispositivo ${e.data.id_tipo} actualizado exitosamente!`,"positive"),console.log(e)}).catch(e=>{a(e.response.data.errors[0].message,"negative"),console.log("Error",e.response.data.message)}),this.getAllTipoDispositivos()},async deleteTD(o){const i=await n.getToken;await p.delete(`tipos-dispositivos/delete/${o}`,{headers:{Authorization:`Bearer ${i}`}}).then(({data:s})=>{a(`Tipo Dispositivo ${s.id_tipo} eliminado exitosamente!`,"positive"),this.tiposDispositivos=this.tiposDispositivos.filter(e=>e.id_tipo!==o),console.log("deleteTD ACTIONS: ",s)}).catch(s=>{console.log("deleteTD ACTIONS: ",s.response.data.message),a(s.response.data.message,"negative"),console.log("Error",s.response.data.message)}),this.getAllTipoDispositivos()}}}),f=()=>{const o=w();return{getAllTipoDispositivos:async()=>{await o.getAllTipoDispositivos()},getTipoDispositivoById:async t=>{await o.getTDById(t)},createTipoDispositivo:async t=>{console.log("createTipoDispositivo ",t),await o.createTipoDispositivo(t)},updateTipoDispositivo:async(t,l)=>{console.log("updateTipoDispositivo",t,l),await o.updateTD(t,l)},deleteTipoDispositivo:async t=>{console.log("deleteTipoDispositivo useTipoDispositivo: ",t),await o.deleteTD(t)},getTiposDispositivos:c(()=>o.getTipoDispositivos),getTipoDispositivo:c(()=>o.getTipoDispositivo),getTDtoSelects:c(()=>o.getTDtoSelect)}};export{f as u};
