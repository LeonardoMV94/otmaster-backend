import{c8 as g,cH as C,cI as i,cJ as l,V as r}from"./index.ff13323e.js";const o=g(),d=C("clientes",{state:()=>({clientes:[],cliente:{}}),getters:{getClientes:e=>e.clientes,getOnlyRuts:e=>e.clientes.map(s=>s.rut_cliente)},actions:{async getAllClientes(){const e=o.getToken;if(e=="")return this.clientes;const{data:s}=await i.get("/clientes",{headers:{Authorization:`Bearer ${e}`}});console.log("getAllClientes ACTIONS: ",s),this.clientes=s},async getClienteById(e){const s=o.getToken,{data:t}=await i.get(`/clientes/${e}`,{headers:{Authorization:`Bearer ${s}`}});console.log(t),this.cliente=t},async createCliente(e){const s=o.getToken;await i.post("/clientes/add/",e,{headers:{Authorization:`Bearer ${s}`}}).then(t=>{l.create({message:`Cliente ${t.data.rut_cliente} creado exitosamente!`,type:"positive",actions:[{label:"Cerrar",color:"white"}]}),console.log(t)}).catch(t=>{l.create({message:t.response.data.errors[0].message,type:"negative",actions:[{label:"Cerrar",color:"white"}]}),console.log("Error",t.response.data.message)}),this.getAllClientes()},async updateCliente(e,s){const t=o.getToken;console.log("updateCliente actions:",e,s),await i.put(`clientes/update/${e}`,s,{headers:{Authorization:`Bearer ${t}`}}).then(a=>{l.create({message:`Cliente ${a.data.rut_cliente} actualizado exitosamente!`,type:"positive",actions:[{label:"Cerrar",color:"white"}]}),console.log(a)}).catch(a=>{l.create({message:a.response.data.errors[0].message,type:"negative",actions:[{label:"Cerrar",color:"white"}]}),console.log("Error",a.response.data.message)}),this.getAllClientes()},async deleteCliente(e){const s=o.getToken;await i.delete(`clientes/delete/${e}`,{headers:{Authorization:`Bearer ${s}`}}).then(({data:t})=>{l.create({message:`Cliente ${t} eliminado exitosamente!`,type:"negative",caption:"Cuidado al eliminar!",progress:!0,actions:[{label:"Cerrar",color:"white"}]}),this.clientes=this.clientes.filter(a=>a.rut_cliente!==e),console.log("deleteCliente ACTIONS: ",t)}).catch(t=>{console.log("deleteCliente ACTIONS: ",t.response.data.message),l.create({message:t.response.data.message,type:"negative",actions:[{label:"Cerrar",color:"white"}]}),console.log("Error",t.response.data.message)}),this.getAllClientes()}}}),y=()=>{const e=d();return{getAllClientes:async()=>{await e.getAllClientes()},getClienteById:async n=>{await e.getClienteById(n)},createCliente:async n=>{console.log("createCliente useCliente: ",n),await e.createCliente(n)},updateCliente:async(n,c)=>{console.log("updateCliente useCliente: ",n,c),await e.updateCliente(n,c)},deleteCliente:async n=>{console.log("deleteCliente useCliente: ",n),await e.deleteCliente(n)},getClientes:r(()=>e.getClientes),getOnlyRuts:r(()=>e.getOnlyRuts)}};export{y as u};
