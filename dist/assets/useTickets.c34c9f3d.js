import{c8 as l,cb as d,cc as c,V as k}from"./index.a4b71a83.js";import{c as n}from"./Notifications.91e332ad.js";const i=l(),r=d("tickets",{state:()=>({tickets:[],ticket:{},estados:[],countRepuestos:[]}),getters:{getTickets:t=>t.tickets,getTicket:t=>t.ticket,getEstados:t=>t.estados,getCountRepuestoss:t=>t.countRepuestos},actions:{async getAllTickets(){const t=i.getToken;if(t=="")return this.tickets;const{data:s}=await c.get("/tickets",{headers:{Authorization:`Bearer ${t}`}});console.log("getAllTickets ACTIONS: ",s),this.tickets=s},async getTicketById(t){const s=i.getToken,{data:e}=await c.get(`/tickets/${t}`,{headers:{Authorization:`Bearer ${s}`}});console.log(e),this.cliente=e},async getCountRepuestos(){const t=await i.getToken,{data:s}=await c.get("tickets/countrepuestos/",{headers:{Authorization:`Bearer ${t}`}});console.log("getCountRepuestos: ",s),this.countRepuestos=s},async getEstadosTickets(){const t=await i.getToken,{data:s}=await c.get("tickets/estados/",{headers:{Authorization:`Bearer ${t}`}});console.log("getEstados: ",s),this.estados=s},async createTicket(t){const s=await i.getToken;await c.post("/tickets/add/",t,{headers:{Authorization:`Bearer ${s}`}}).then(e=>{console.log(e.data.id_ticket),n(`Ticket ${e.data.id_ticket} creado exitosamente!`,"positive"),console.log(e)}).catch(e=>{n(e.response.data,"negative"),console.log("Error",e.response.data.message)}),this.getAllTickets()},async updateTicket(t,s){const e=i.getToken;console.log("updateticket actions:",t,s),await c.patch(`tickets/update/${t}`,s,{headers:{Authorization:`Bearer ${e}`}}).then(a=>{n(`Ticket ${a.data.id_ticket} actualizado exitosamente!`,"positive"),console.log(a)}).catch(a=>{n(a.response.data.errors[0].message,"negative"),console.log("Error",a.response.data.message)}),this.getAllTickets()},async deleteTicket(t){const s=i.getToken;await c.delete(`tickets/delete/${t}`,{headers:{Authorization:`Bearer ${s}`}}).then(({data:e})=>{n(`Ticket ${e.id} eliminado exitosamente!`,"negative"),console.log("antes ",this.tickets),this.tickets=this.tickets.filter(a=>a.id_ticket!==t),console.log("despues",this.tickets),console.log("deleteTicket ACTIONS: ",e)}).catch(e=>{console.log("deleteTicket ACTIONS: ",e.response.data.message),n(e.response.data.message,"negative"),console.log("Error",e.response.data.message)})}}}),w=()=>{const t=r();return{getAllTickets:async()=>{await t.getAllTickets()},getTicketById:async o=>{await t.getTicketById(o)},createTicket:async o=>{console.log("createTicket ",o),await t.createTicket(o)},updateTicket:async(o,g)=>{console.log("updateTicket",o,g),await t.updateTicket(o,g)},deleteTicket:async o=>{console.log("deleteTicket useTicket: ",o),await t.deleteTicket(o)},getAllEstados:async()=>{await t.getEstadosTickets()},getAllCountRepuestos:async()=>{await t.getCountRepuestos()},getTickets:k(()=>t.getTickets),getTicket:k(()=>t.getTicket),getEstadosTicket:k(()=>t.getEstados),getCountAllRepuestos:k(()=>t.getCountRepuestoss)}};export{w as u};
