var d=Object.defineProperty,h=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var A=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var r=(e,t,s)=>t in e?d(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,i=(e,t)=>{for(var s in t||(t={}))A.call(t,s)&&r(e,s,t[s]);if(l)for(var s of l(t))y.call(t,s)&&r(e,s,t[s]);return e},g=(e,t)=>h(e,m(t));import{c8 as w,cb as S,cc as u,V as R}from"./index.6afc27b2.js";import{c as p}from"./Notifications.3fd28b16.js";const n=w(),$=S("repuestos",{state:()=>({repuestos:[]}),getters:{getRepuestos:e=>e.repuestos,getRepuestosSelect:e=>e.repuestos.map(t=>g(i({},t),{label:t.repuesto,value:t.id_repuesto}))},actions:{async getAllRepuestos(){const e=await n.getToken;if(e=="")return this.repuestos;const{data:t}=await u.get("/repuestos/",{headers:{Authorization:`Bearer ${e}`}});console.log("getAllMarcaDispositivos ACTIONS: ",t),this.repuestos=t},async createRepuesto(e){console.log("createRepuesto: ",e);const t=n.getToken;await u.post("/repuestos/add/",e,{headers:{Authorization:`Bearer ${t}`}}).then(s=>{p(`Repuesto ${s.data.id_repuesto} creado exitosamente!`,"positive"),console.log(s)}).catch(s=>{p(s.response.data.message,"negative"),console.log("Error",s.response.data.message)}),this.getAllRepuestos()},async updateRepuesto(e,t){const s=n.getToken;console.log("updateRepuesto actions:",e,t),await u.patch(`repuestos/${e}`,t,{headers:{Authorization:`Bearer ${s}`}}).then(a=>{p(`Repuesto ${a.data.id_repuesto} actualizado exitosamente!`,"positive"),console.log(a)}).catch(a=>{p(a.response.data.errors[0].message,"negative"),console.log("Error",a.response.data.message)}),this.getAllRepuestos()},async deleteRepuesto(e){const t=n.getToken;await u.delete(`repuestos/delete/${e}`,{headers:{Authorization:`Bearer ${t}`}}).then(({data:s})=>{p(`Repuesto ${s.id_repuesto} eliminado exitosamente!`,"negative"),console.log("antes ",this.repuestos),this.repuestos=this.repuestos.filter(a=>a.id_repuesto!==e),console.log("despues",this.repuestos),console.log("deleteRepuesto ACTIONS: ",s)}).catch(s=>{console.log("deleteRepuesto ACTIONS: ",s.response.data.message),p(s.response.data.message,"negative"),console.log("Error",s.response.data.message)})}}}),I=()=>{const e=$();return{getAllRepuestos:async()=>{await e.getAllRepuestos()},getRepuestoById:async o=>{await e.getRepuestoById(o)},createNewRepuesto:async o=>{console.log("createRepuesto ",o),await e.createRepuesto(o)},updateRepuesto:async(o,c)=>{console.log("updateRepuesto",o,c),await e.updateRepuesto(o,c)},deleteRepuesto:async o=>{console.log("deleteRepuesto useRepuesto: ",o),await e.deleteRepuesto(o)},getRepuestos:R(()=>e.getRepuestos),getRepuestosSelects:R(()=>e.getRepuestosSelect)}};export{I as u};
